{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport PageNumber from \"./pageNumber.js\";\nimport PageSize from \"./pageSize.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Default = \"\"\n  const [pageNumber, setPageNumber] = useState(1); //Default = Page 1\n  const [pageSize, setPageSize] = useState(\"\"); //Default = Size 10\n  const [pageCount, setPageCount] = useState(10); // Initialize pageCount with 0\n\n  const handleSearch = searchTerm => {\n    searchTerm = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    setSearchQuery(searchTerm);\n  };\n  const handlePageChange = newPage => {\n    setPageNumber(newPage);\n  };\n  const handleSizeChange = newSize => {\n    if (isNaN(pageCount) || isNaN(newSize) || isNaN(apiData.length) || newSize <= 0) {\n      console.error(\"Invalid data or newSize:\", pageCount, newSize, apiData.length);\n      return;\n    }\n    const maxValidPageNumber = Math.min(pageCount, Math.ceil(apiData.length / newSize));\n    console.log(\"FAEB\", maxValidPageNumber);\n    setPageSize(newSize);\n    if (pageNumber > maxValidPageNumber) {\n      setPageNumber(1);\n    }\n  };\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what size we are requesting to the API request.\n    apiQuery = apiQuery + \"&pageSize=\" + pageSize;\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n\n    // Query data from API.\n    console.log(\"apiQuery: \" + apiQuery);\n    console.log(\"pageSize: \" + pageSize);\n    console.log(\"pageNumber: \" + pageNumber);\n    fetch(apiQuery).then(results => results.json()).then(data => {\n      // Then add response to state.\n      setApiData(data);\n      setPageCount(data.pager.pageCount);\n      console.log(\"pageCount: \" + data.pager.pageCount); // Log the updated pageCount\n    });\n  }, [searchQuery, pageNumber, pageSize]); // Array containing which state changes that should re-reun useEffect()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      data: apiData,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      apiData: apiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageNumber, {\n      onPageChange: handlePageChange,\n      pageNumber: pageNumber // Pass the current page as a prop\n      ,\n      pageCount: pageCount // Pass the pageCount as a prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSize, {\n      onSizeChange: handleSizeChange,\n      pageNumber: pageNumber // Pass the current page as a prop\n      ,\n      pageCount: pageCount // Pass the pageCount as a prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G6TQ+ZYbfqhqG47U4/k70sFdySY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","SearchBar","PageNumber","PageSize","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","searchQuery","setSearchQuery","pageNumber","setPageNumber","pageSize","setPageSize","pageCount","setPageCount","handleSearch","searchTerm","charAt","toUpperCase","slice","handlePageChange","newPage","handleSizeChange","newSize","isNaN","length","console","error","maxValidPageNumber","Math","min","ceil","log","apiQuery","fetch","then","results","json","data","pager","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onPageChange","onSizeChange","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport PageNumber from \"./pageNumber.js\";\nimport PageSize from \"./pageSize.js\";\n\nfunction App() {\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Default = \"\"\n  const [pageNumber, setPageNumber] = useState(1); //Default = Page 1\n  const [pageSize, setPageSize] = useState(\"\"); //Default = Size 10\n  const [pageCount, setPageCount] = useState(10); // Initialize pageCount with 0\n\n  const handleSearch = (searchTerm) => {\n    searchTerm = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    setSearchQuery(searchTerm);\n  }\n\n  const handlePageChange = (newPage) => {\n    setPageNumber(newPage);\n  }\n\n  const handleSizeChange = (newSize) => {\n    if (isNaN(pageCount) || isNaN(newSize) || isNaN(apiData.length) || newSize <= 0) {\n      console.error(\"Invalid data or newSize:\", pageCount, newSize, apiData.length);\n      return;\n    }\n    \n\n    const maxValidPageNumber = Math.min(pageCount, Math.ceil(apiData.length / newSize));\n    console.log(\"FAEB\", maxValidPageNumber);\n\n    setPageSize(newSize);\n\n    if (pageNumber > maxValidPageNumber) {\n      setPageNumber(1);\n    }\n  }\n\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what size we are requesting to the API request.\n    apiQuery = apiQuery + \"&pageSize=\" + pageSize;\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n\n    // Query data from API.\n    console.log(\"apiQuery: \" + apiQuery);\n    console.log(\"pageSize: \" + pageSize);\n    console.log(\"pageNumber: \" + pageNumber);\n    \n    fetch(apiQuery)\n      .then((results) => results.json())\n      .then((data) => {\n        // Then add response to state.\n        setApiData(data);\n        setPageCount(data.pager.pageCount);\n        console.log(\"pageCount: \" + data.pager.pageCount); // Log the updated pageCount\n      });\n  }, [searchQuery, pageNumber, pageSize]); // Array containing which state changes that should re-reun useEffect()\n\n  return (\n    <div className=\"App\">\n      <h1>Country lookup</h1>\n      <SearchBar data= {apiData} onSearch={handleSearch} />\n      <Table apiData={apiData} />\n      <PageNumber \n        onPageChange={handlePageChange}\n        pageNumber={pageNumber} // Pass the current page as a prop\n        pageCount={pageCount} // Pass the pageCount as a prop\n       />\n      <PageSize onSizeChange={handleSizeChange}\n        pageNumber={pageNumber} // Pass the current page as a prop\n        pageCount={pageCount} // Pass the pageCount as a prop\n       />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}