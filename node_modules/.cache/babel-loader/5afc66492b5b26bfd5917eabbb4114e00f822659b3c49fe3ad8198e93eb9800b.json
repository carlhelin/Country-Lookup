{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/ContinentSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction transformListToString(inputList) {\n  // ... (your transformation logic)\n}\nconst ContinentSelector = ({\n  onContinentChange\n}) => {\n  _s();\n  const continents = [\"Africa\", \"Asia\", \"Europe\", \"North America\", \"Oceania\", \"South America\"];\n  const [selectedContinents, setSelectedContinents] = useState([]);\n  const handleCheckboxChange = continent => {\n    // Toggle the selected continent\n    if (selectedContinents.includes(continent)) {\n      setSelectedContinents(prevSelected => prevSelected.filter(c => c !== continent));\n    } else {\n      setSelectedContinents(prevSelected => [...prevSelected, continent]);\n    }\n  };\n\n  // Call the callback function when checkboxes change\n  const handleSelectionChange = () => {\n    const transformedList = transformListToString(selectedContinents);\n    console.log(transformedList);\n    onContinentChange(transformedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Continent Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), continents.map(continent => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: continent,\n        checked: selectedContinents.includes(continent),\n        onChange: () => {\n          handleCheckboxChange(continent);\n          handleSelectionChange(); // Call the callback here\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), continent]\n    }, continent, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinentSelector, \"eINLi7ZnytvnLxQWgnj4N42WqdI=\");\n_c = ContinentSelector;\nexport default ContinentSelector;\nvar _c;\n$RefreshReg$(_c, \"ContinentSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","transformListToString","inputList","ContinentSelector","onContinentChange","_s","continents","selectedContinents","setSelectedContinents","handleCheckboxChange","continent","includes","prevSelected","filter","c","handleSelectionChange","transformedList","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/ContinentSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction transformListToString(inputList) {\n  // ... (your transformation logic)\n}\n\nconst ContinentSelector = ({ onContinentChange }) => {\n  const continents = [\"Africa\", \"Asia\", \"Europe\", \"North America\", \"Oceania\", \"South America\"];\n  const [selectedContinents, setSelectedContinents] = useState([]);\n\n  const handleCheckboxChange = (continent) => {\n    // Toggle the selected continent\n    if (selectedContinents.includes(continent)) {\n      setSelectedContinents(prevSelected => prevSelected.filter(c => c !== continent));\n    } else {\n      setSelectedContinents(prevSelected => [...prevSelected, continent]);\n    }\n  };\n\n  // Call the callback function when checkboxes change\n  const handleSelectionChange = () => {\n    const transformedList = transformListToString(selectedContinents);\n    console.log(transformedList);\n    onContinentChange(transformedList);\n  };\n\n  return (\n    <div>\n      <h2>Continent Selector</h2>\n      {continents.map((continent) => (\n        <label key={continent}>\n          <input\n            type=\"checkbox\"\n            value={continent}\n            checked={selectedContinents.includes(continent)}\n            onChange={() => {\n              handleCheckboxChange(continent);\n              handleSelectionChange(); // Call the callback here\n            }}\n          />\n          {continent}\n        </label>\n      ))}\n    </div>\n  );\n};\n\nexport default ContinentSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,qBAAqBA,CAACC,SAAS,EAAE;EACxC;AAAA;AAGF,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,eAAe,CAAC;EAC5F,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMW,oBAAoB,GAAIC,SAAS,IAAK;IAC1C;IACA,IAAIH,kBAAkB,CAACI,QAAQ,CAACD,SAAS,CAAC,EAAE;MAC1CF,qBAAqB,CAACI,YAAY,IAAIA,YAAY,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,SAAS,CAAC,CAAC;IAClF,CAAC,MAAM;MACLF,qBAAqB,CAACI,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEF,SAAS,CAAC,CAAC;IACrE;EACF,CAAC;;EAED;EACA,MAAMK,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,eAAe,GAAGf,qBAAqB,CAACM,kBAAkB,CAAC;IACjEU,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;IAC5BZ,iBAAiB,CAACY,eAAe,CAAC;EACpC,CAAC;EAED,oBACEhB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BjB,UAAU,CAACkB,GAAG,CAAEd,SAAS,iBACxBV,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QACEyB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEhB,SAAU;QACjBiB,OAAO,EAAEpB,kBAAkB,CAACI,QAAQ,CAACD,SAAS,CAAE;QAChDkB,QAAQ,EAAEA,CAAA,KAAM;UACdnB,oBAAoB,CAACC,SAAS,CAAC;UAC/BK,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC3B;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACDb,SAAS;IAAA,GAVAA,SAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWd,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCIF,iBAAiB;AAAA0B,EAAA,GAAjB1B,iBAAiB;AAyCvB,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}