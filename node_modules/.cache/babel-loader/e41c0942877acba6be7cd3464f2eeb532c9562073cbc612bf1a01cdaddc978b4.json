{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/Country-Lookup/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport PageNumber from \"./pageNumber.js\";\nimport PageSize from \"./pageSize.js\";\nimport ContinentSelector from \"./ContinentSelector.js\";\n\n// Converts an array of continents to their corresponding two-letter continent abbreviations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction transformListToString(inputList) {\n  const continentAbbreviations = {\n    'Africa': 'AF',\n    'Antarctica': 'AN',\n    'Asia': 'AS',\n    'Europe': 'EU',\n    'North America': 'NA',\n    'Oceania': 'OC',\n    'South America': 'SA'\n  };\n  return inputList.filter(continent => continentAbbreviations[continent]).sort().map(continent => continentAbbreviations[continent]);\n}\nfunction App() {\n  _s();\n  /* Create state:\n   - apiData: A list containing dictionaries of countries fetched from an API.\n   - searchQuery: The search query parameter that should be added to the API request's \"&search=\".\n   - pageNumber: The page number that is currently requested and displayed.\n   - pageSize: The number of items to display per page.\n   - column: The column by which the data should be sorted.\n   - sortOrder: The sorting order (e.g., \"ascending\" or \"descending\").\n   - pageCount: The total number of pages available based on the data and page size.\n   - selectedContinents: An array containing the continents selected as filter criteria.\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [column, setColumn] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"\");\n  const [pageCount, setPageCount] = useState(10);\n  const [selectedContinents, setSelectedContinents] = useState([]);\n  const handleSearch = searchTerm => {\n    searchTerm = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    setPageNumber(1);\n    setSearchQuery(searchTerm);\n  };\n  const handlePageChange = newPage => {\n    setPageNumber(newPage);\n  };\n  const handleSizeChange = newSize => {\n    setPageNumber(1);\n    setPageSize(newSize);\n  };\n  const handleSort = (column, sortOrder) => {\n    setApiData({\n      ...apiData,\n      order: `${column}:${sortOrder}`\n    });\n    setPageNumber(1);\n    setColumn(column);\n    setSortOrder(sortOrder);\n  };\n\n  // Update the selected continents based on the ContinentSelector\n  const handleContinentChange = continents => {\n    setPageNumber(1);\n    setSelectedContinents(continents);\n  };\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n    apiQuery = apiQuery + \"&pageSize=\" + pageSize;\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n    if (column && sortOrder) {\n      apiQuery = apiQuery + `&order=${column}:${sortOrder}`;\n    }\n    if (selectedContinents && selectedContinents.length >= 1) {\n      const selectedCountriesString = transformListToString(selectedContinents);\n      const continentString = selectedCountriesString.join(',');\n      apiQuery = apiQuery + `&ContinentCode=${continentString}`;\n    }\n    fetch(apiQuery).then(results => results.json()).then(data => {\n      // Then add response to state.\n      setApiData(data);\n      setPageCount(data.pager.pageCount);\n      setColumn(column);\n      setSortOrder(sortOrder);\n    });\n  }, [searchQuery, pageNumber, pageSize, sortOrder, column, pageCount, selectedContinents]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      data: apiData,\n      onSearch: handleSearch,\n      pageCount: pageCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContinentSelector, {\n      onContinentChange: handleContinentChange,\n      selectedContinents: selectedContinents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      apiData: apiData,\n      handleSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageNumber, {\n      onPageChange: handlePageChange,\n      pageNumber: pageNumber,\n      pageCount: pageCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSize, {\n      onSizeChange: handleSizeChange,\n      pageNumber: pageNumber,\n      page: pageCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YbWIB/rvLR1oknJi4lDDLMxjTHw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","SearchBar","PageNumber","PageSize","ContinentSelector","jsxDEV","_jsxDEV","transformListToString","inputList","continentAbbreviations","filter","continent","sort","map","App","_s","apiData","setApiData","searchQuery","setSearchQuery","pageNumber","setPageNumber","pageSize","setPageSize","column","setColumn","sortOrder","setSortOrder","pageCount","setPageCount","selectedContinents","setSelectedContinents","handleSearch","searchTerm","charAt","toUpperCase","slice","handlePageChange","newPage","handleSizeChange","newSize","handleSort","order","handleContinentChange","continents","apiQuery","length","selectedCountriesString","continentString","join","fetch","then","results","json","data","pager","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onContinentChange","onPageChange","onSizeChange","page","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/Country-Lookup/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport PageNumber from \"./pageNumber.js\";\nimport PageSize from \"./pageSize.js\";\nimport ContinentSelector from \"./ContinentSelector.js\";\n\n// Converts an array of continents to their corresponding two-letter continent abbreviations\nfunction transformListToString(inputList) {\n  const continentAbbreviations = {\n    'Africa': 'AF',\n    'Antarctica': 'AN',\n    'Asia': 'AS',\n    'Europe': 'EU',\n    'North America': 'NA',\n    'Oceania': 'OC',\n    'South America': 'SA'\n  };\n\n  return inputList\n    .filter(continent => continentAbbreviations[continent])\n    .sort()\n    .map(continent => continentAbbreviations[continent]);\n}\n\nfunction App() {\n  /* Create state:\n   - apiData: A list containing dictionaries of countries fetched from an API.\n   - searchQuery: The search query parameter that should be added to the API request's \"&search=\".\n   - pageNumber: The page number that is currently requested and displayed.\n   - pageSize: The number of items to display per page.\n   - column: The column by which the data should be sorted.\n   - sortOrder: The sorting order (e.g., \"ascending\" or \"descending\").\n   - pageCount: The total number of pages available based on the data and page size.\n   - selectedContinents: An array containing the continents selected as filter criteria.\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\"); \n  const [pageNumber, setPageNumber] = useState(1); \n  const [pageSize, setPageSize] = useState(10); \n  const [column, setColumn] = useState(\"\"); \n  const [sortOrder, setSortOrder] = useState(\"\"); \n  const [pageCount, setPageCount] = useState(10);\n  const [selectedContinents, setSelectedContinents] = useState([]);\n\n  const handleSearch = (searchTerm) => {\n    searchTerm = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    setPageNumber(1);\n    setSearchQuery(searchTerm);\n  }\n\n  const handlePageChange = (newPage) => {\n    setPageNumber(newPage);\n  }\n\n  const handleSizeChange = (newSize) => {\n    setPageNumber(1);\n    setPageSize(newSize);\n  }\n\n  const handleSort = (column, sortOrder) => {\n    setApiData({ ...apiData, order: `${column}:${sortOrder}` });\n    setPageNumber(1);\n    setColumn(column);\n    setSortOrder(sortOrder);\n  };\n\n  // Update the selected continents based on the ContinentSelector\n  const handleContinentChange = (continents) => {\n    setPageNumber(1);\n    setSelectedContinents(continents);\n  };\n\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    apiQuery = apiQuery + \"&pageSize=\" + pageSize;\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n\n    if (column && sortOrder) {\n      apiQuery = apiQuery + `&order=${column}:${sortOrder}`;\n    }\n\n    if (selectedContinents && selectedContinents.length >= 1) {\n      const selectedCountriesString = transformListToString(selectedContinents);\n      const continentString = selectedCountriesString.join(',');\n      apiQuery = apiQuery + `&ContinentCode=${continentString}`;\n    }\n    \n    fetch(apiQuery)\n      .then((results) => results.json())\n      .then((data) => {\n        // Then add response to state.\n        setApiData(data);\n        setPageCount(data.pager.pageCount);\n        setColumn(column);\n        setSortOrder(sortOrder);\n        \n      });\n  }, [searchQuery, pageNumber, pageSize, sortOrder, column, pageCount, selectedContinents]);\n\n  return (\n    <div className=\"App\">\n      <h1>Country lookup</h1>\n      <SearchBar data= {apiData} onSearch={handleSearch} pageCount={pageCount} />\n      <ContinentSelector onContinentChange={handleContinentChange} selectedContinents={selectedContinents} />\n      <Table apiData={apiData} handleSort={handleSort} />\n      <PageNumber onPageChange={handlePageChange} pageNumber={pageNumber} pageCount={pageCount} />\n      <PageSize onSizeChange={handleSizeChange} pageNumber={pageNumber} page={pageCount} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}