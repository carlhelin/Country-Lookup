{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport setSearchQuery from \"./searchBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(); // Default = No search query\n  const [pageNumber, setPageNumber] = useState(1); //Default = Page 1\n\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n\n    // Query data from API.\n    console.log(\"Querying: \" + apiQuery);\n    fetch(apiQuery).then(results => results.json()).then(data => {\n      // Then add response to state.\n      setApiData(data);\n    });\n  }, [searchQuery, pageNumber]); // Array containing which state changes that should re-reun useEffect()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"searchBar\", {\n      input: searchBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      apiData: apiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rTaGc53rF/8tXkj2/mrp1cnDyKg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","setSearchQuery","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","searchQuery","pageNumber","setPageNumber","apiQuery","console","log","fetch","then","results","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","input","searchBar","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport setSearchQuery from \"./searchBar.js\";\n\nfunction App() {\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(); // Default = No search query\n  const [pageNumber, setPageNumber] = useState(1); //Default = Page 1\n\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n\n    // Query data from API.\n    console.log(\"Querying: \" + apiQuery);\n    fetch(apiQuery)\n      .then((results) => results.json())\n      .then((data) => {\n        // Then add response to state.\n        setApiData(data);\n      });\n  }, [searchQuery, pageNumber]); // Array containing which state changes that should re-reun useEffect()\n\n  return (\n    <div className=\"App\">\n      <h1>Country lookup</h1>\n      <searchBar input={searchBar} />\n      <Table apiData={apiData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,cAAc,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;AACF;AACA;AACA;AACA;;EAEE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,WAAW,EAAEP,cAAc,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,QAAQ,GAAG,0CAA0C;;IAEzD;IACA,IAAIH,WAAW,EAAE;MACfG,QAAQ,GAAGA,QAAQ,GAAG,UAAU,GAAGH,WAAW;IAChD;;IAEA;IACAG,QAAQ,GAAGA,QAAQ,GAAG,QAAQ,GAAGF,UAAU;;IAE3C;IACAG,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGF,QAAQ,CAAC;IACpCG,KAAK,CAACH,QAAQ,CAAC,CACZI,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAX,UAAU,CAACW,IAAI,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,CAACV,WAAW,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE/B,oBACEN,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrB,OAAA;MAAWsB,KAAK,EAAEC;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BrB,OAAA,CAACH,KAAK;MAACM,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAACnB,EAAA,CAxCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}