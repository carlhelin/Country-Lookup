{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport PageNumber from \"./pageNumber.js\";\nimport PageSize from \"./pageSize.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [page, setPageCount] = useState(10);\n  const [column, setColumn] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"\");\n  const handleSearch = searchTerm => {\n    searchTerm = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    console.log(page);\n    setPageSize(page);\n    setPageNumber(1);\n    setSearchQuery(searchTerm);\n  };\n  const handlePageChange = newPage => {\n    setPageNumber(newPage);\n  };\n  const handleSizeChange = newSize => {\n    setPageNumber(1);\n    setPageSize(newSize);\n  };\n  const handleSort = (column, sortOrder) => {\n    setApiData({\n      ...apiData,\n      order: `${column}:${sortOrder}`\n    });\n    setPageNumber(1);\n    setColumn(column);\n    setSortOrder(sortOrder);\n  };\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what size we are requesting to the API request.\n    apiQuery = apiQuery + \"&pageSize=\" + pageSize;\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n    if (column && sortOrder) {\n      apiQuery = apiQuery + `&order=${column}:${sortOrder}`;\n    }\n    fetch(apiQuery).then(results => results.json()).then(data => {\n      // Then add response to state.\n      setApiData(data);\n      setPageCount(pageCount);\n      setColumn(column);\n      setSortOrder(sortOrder);\n      console.log(apiQuery);\n    });\n  }, [searchQuery, pageNumber, pageSize, sortOrder, column, page]); // Array containing which state changes that should re-reun useEffect()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      data: apiData,\n      onSearch: handleSearch,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      apiData: apiData,\n      handleSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageNumber, {\n      onPageChange: handlePageChange,\n      pageNumber: pageNumber,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSize, {\n      onSizeChange: handleSizeChange,\n      pageNumber: pageNumber,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"glqhb9HP6aUR2UnXJt+QcHYL15U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","SearchBar","PageNumber","PageSize","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","searchQuery","setSearchQuery","pageNumber","setPageNumber","pageSize","setPageSize","page","setPageCount","column","setColumn","sortOrder","setSortOrder","handleSearch","searchTerm","charAt","toUpperCase","slice","console","log","handlePageChange","newPage","handleSizeChange","newSize","handleSort","order","apiQuery","fetch","then","results","json","data","pageCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onPageChange","onSizeChange","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport PageNumber from \"./pageNumber.js\";\nimport PageSize from \"./pageSize.js\";\n\nfunction App() {\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\"); \n  const [pageNumber, setPageNumber] = useState(1); \n  const [pageSize, setPageSize] = useState(10); \n  const [page, setPageCount] = useState(10); \n  const [column, setColumn] = useState(\"\"); \n  const [sortOrder, setSortOrder] = useState(\"\"); \n\n  const handleSearch = (searchTerm) => {\n    searchTerm = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    console.log(page);\n    setPageSize(page);\n    setPageNumber(1);\n    setSearchQuery(searchTerm);\n  }\n\n  const handlePageChange = (newPage) => {\n    setPageNumber(newPage);\n  }\n\n  const handleSizeChange = (newSize) => {\n    setPageNumber(1);\n    setPageSize(newSize);\n  }\n\n  const handleSort = (column, sortOrder) => {\n    setApiData({ ...apiData, order: `${column}:${sortOrder}` });\n    setPageNumber(1);\n    setColumn(column);\n    setSortOrder(sortOrder);\n  };\n\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what size we are requesting to the API request.\n    apiQuery = apiQuery + \"&pageSize=\" + pageSize;\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n\n    if (column && sortOrder) {\n      apiQuery = apiQuery + `&order=${column}:${sortOrder}`;\n    }\n    \n    \n\n    fetch(apiQuery)\n      .then((results) => results.json())\n      .then((data) => {\n        // Then add response to state.\n        setApiData(data);\n        setPageCount(pageCount);\n        setColumn(column);\n        setSortOrder(sortOrder);\n        console.log(apiQuery);\n        \n      });\n  }, [searchQuery, pageNumber, pageSize, sortOrder, column, page]); // Array containing which state changes that should re-reun useEffect()\n\n  return (\n    <div className=\"App\">\n      <h1>Country lookup</h1>\n      <SearchBar data= {apiData} onSearch={handleSearch} page={page} />\n      <Table apiData={apiData} handleSort={handleSort} />\n      <PageNumber onPageChange={handlePageChange} pageNumber={pageNumber} page={page} />\n      <PageSize onSizeChange={handleSizeChange} pageNumber={pageNumber} page={page} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}