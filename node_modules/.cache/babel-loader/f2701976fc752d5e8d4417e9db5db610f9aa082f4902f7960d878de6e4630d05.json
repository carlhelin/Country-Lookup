{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/ContinentSelector.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction transformListToString(inputList) {\n  const continentAbbreviations = {\n    'Africa': 'AF',\n    'Antarctica': 'AN',\n    'Asia': 'AS',\n    'Europe': 'EU',\n    'North America': 'NA',\n    'Oceania': 'OC',\n    'South America': 'SA'\n  };\n  return inputList.filter(continent => continentAbbreviations[continent]).sort().map(continent => continentAbbreviations[continent]);\n}\nconst ContinentSelector = ({\n  onContinentChange\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const continents = [\"Africa\", \"Asia\", \"Europe\", \"North America\", \"Oceania\", \"South America\"];\n  const [selectedContinents, setSelectedContinents] = useState([]);\n  const handleCheckboxChange = continent => {\n    _s();\n    // Toggle the selected continent\n    if (selectedContinents.includes(continent)) {\n      setSelectedContinents(selectedContinents.filter(c => c !== continent));\n    } else {\n      setSelectedContinents([...selectedContinents, continent]);\n    }\n    useEffect(() => {\n      onContinentChange(transformListToString(selectedContinents));\n    }, [selectedContinents, onContinentChange]);\n  };\n  _s(handleCheckboxChange, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Continent Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), continents.map(continent => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: continent,\n        checked: selectedContinents.includes(continent),\n        onChange: () => handleCheckboxChange(continent)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), continent]\n    }, continent, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s2(ContinentSelector, \"eINLi7ZnytvnLxQWgnj4N42WqdI=\");\n_c = ContinentSelector;\nexport default ContinentSelector;\nvar _c;\n$RefreshReg$(_c, \"ContinentSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","transformListToString","inputList","continentAbbreviations","filter","continent","sort","map","ContinentSelector","onContinentChange","_s2","_s","$RefreshSig$","continents","selectedContinents","setSelectedContinents","handleCheckboxChange","includes","c","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/ContinentSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction transformListToString(inputList) {\n  const continentAbbreviations = {\n    'Africa': 'AF',\n    'Antarctica': 'AN',\n    'Asia': 'AS',\n    'Europe': 'EU',\n    'North America': 'NA',\n    'Oceania': 'OC',\n    'South America': 'SA'\n  };\n\n  return inputList\n    .filter(continent => continentAbbreviations[continent])\n    .sort()\n    .map(continent => continentAbbreviations[continent]);\n}\n\nconst ContinentSelector = ({ onContinentChange }) => {\n  const continents = [\"Africa\", \"Asia\", \"Europe\", \"North America\", \"Oceania\", \"South America\"];\n  const [selectedContinents, setSelectedContinents] = useState([]);\n\n  const handleCheckboxChange = (continent) => {\n    // Toggle the selected continent\n    if (selectedContinents.includes(continent)) {\n      setSelectedContinents(selectedContinents.filter((c) => c !== continent));\n    } else {\n      setSelectedContinents([...selectedContinents, continent]);\n    }\n\n    useEffect(() => {\n        onContinentChange(transformListToString(selectedContinents));\n      }, [selectedContinents, onContinentChange]);\n  };\n\n  return (\n    <div>\n      <h2>Continent Selector</h2>\n      {continents.map((continent) => (\n        <label key={continent}>\n          <input\n            type=\"checkbox\"\n            value={continent}\n            checked={selectedContinents.includes(continent)}\n            onChange={() => handleCheckboxChange(continent)}\n          />\n          {continent}\n        </label>\n      ))}\n    </div>\n  );\n};\n\nexport default ContinentSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,qBAAqBA,CAACC,SAAS,EAAE;EACxC,MAAMC,sBAAsB,GAAG;IAC7B,QAAQ,EAAE,IAAI;IACd,YAAY,EAAE,IAAI;IAClB,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,IAAI;IACd,eAAe,EAAE,IAAI;IACrB,SAAS,EAAE,IAAI;IACf,eAAe,EAAE;EACnB,CAAC;EAED,OAAOD,SAAS,CACbE,MAAM,CAACC,SAAS,IAAIF,sBAAsB,CAACE,SAAS,CAAC,CAAC,CACtDC,IAAI,CAAC,CAAC,CACNC,GAAG,CAACF,SAAS,IAAIF,sBAAsB,CAACE,SAAS,CAAC,CAAC;AACxD;AAEA,MAAMG,iBAAiB,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACnD,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,eAAe,CAAC;EAC5F,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMkB,oBAAoB,GAAIX,SAAS,IAAK;IAAAM,EAAA;IAC1C;IACA,IAAIG,kBAAkB,CAACG,QAAQ,CAACZ,SAAS,CAAC,EAAE;MAC1CU,qBAAqB,CAACD,kBAAkB,CAACV,MAAM,CAAEc,CAAC,IAAKA,CAAC,KAAKb,SAAS,CAAC,CAAC;IAC1E,CAAC,MAAM;MACLU,qBAAqB,CAAC,CAAC,GAAGD,kBAAkB,EAAET,SAAS,CAAC,CAAC;IAC3D;IAEAc,SAAS,CAAC,MAAM;MACZV,iBAAiB,CAACR,qBAAqB,CAACa,kBAAkB,CAAC,CAAC;IAC9D,CAAC,EAAE,CAACA,kBAAkB,EAAEL,iBAAiB,CAAC,CAAC;EAC/C,CAAC;EAACE,EAAA,CAXIK,oBAAoB;EAa1B,oBACEhB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BX,UAAU,CAACN,GAAG,CAAEF,SAAS,iBACxBL,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QACEyB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAErB,SAAU;QACjBsB,OAAO,EAAEb,kBAAkB,CAACG,QAAQ,CAACZ,SAAS,CAAE;QAChDuB,QAAQ,EAAEA,CAAA,KAAMZ,oBAAoB,CAACX,SAAS;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,EACDnB,SAAS;IAAA,GAPAA,SAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQd,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,GAAA,CAjCIF,iBAAiB;AAAAqB,EAAA,GAAjBrB,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}