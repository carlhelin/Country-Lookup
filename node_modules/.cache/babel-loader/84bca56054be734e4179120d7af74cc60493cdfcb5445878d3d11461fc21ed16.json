{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(props) {\n  _s();\n  const [sortColumn, setSortColumn] = useState('Country');\n  const [sortOrder, setSortOrder] = useState({\n    Country: '',\n    Population: '',\n    Growth: '',\n    Continent: ''\n  });\n  const handleSort = column => {\n    setSortOrder(prevSortOrder => ({\n      Country: column === 'Country' ? prevSortOrder.Country === 'ASC' ? 'DESC' : 'ASC' : '',\n      Population: column === 'Population' ? prevSortOrder.Population === 'ASC' ? 'DESC' : 'ASC' : '',\n      Growth: column === 'Growth' ? prevSortOrder.Growth === 'ASC' ? 'DESC' : 'ASC' : '',\n      Continent: column === 'Continent' ? prevSortOrder.Continent === 'ASC' ? 'DESC' : 'ASC' : ''\n    }));\n\n    // Determine the new sortOrder for the clicked column\n    const currentOrder = sortOrder[column];\n    const newOrder = currentOrder === 'ASC' ? 'DESC' : 'ASC';\n\n    // Call the onSortChange callback to send sorting information to the parent component\n    props.onSortChange(column, newOrder);\n  };\n  if (!props.apiData.results) {\n    // If the API request isn't completed return \"loading...\"\"\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  } else {\n    // Extract the data from the API response\n    let data = props.apiData.results;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"tabbel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('Country'),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Country\", sortOrder.Country === 'ASC' && ' ▲', sortOrder.Country === 'DESC' && ' ▼']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('Population'),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Population\", sortOrder.Population === 'ASC' && ' ▲', sortOrder.Population === 'DESC' && ' ▼']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('Growth'),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Growth\", sortOrder.Growth === 'ASC' && ' ▲', sortOrder.Growth === 'desc' && ' ▼']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('Continent'),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Continent\", sortOrder.Continent === 'ASC' && ' ▲', sortOrder.Continent === 'DESC' && ' ▼']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.Country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.Population.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.PopulationGrowth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.Continent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Table, \"/0kDrSkTXsf0hS8MUdKi69LOLoQ=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Table","props","_s","sortColumn","setSortColumn","sortOrder","setSortOrder","Country","Population","Growth","Continent","handleSort","column","prevSortOrder","currentOrder","newOrder","onSortChange","apiData","results","children","fileName","_jsxFileName","lineNumber","columnNumber","data","class","onClick","map","row","index","toLocaleString","PopulationGrowth","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/Table.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Table(props) {\n\n  const [sortColumn, setSortColumn] = useState('Country');\n\n  const [sortOrder, setSortOrder] = useState({\n    Country: '',\n    Population: '',\n    Growth: '',\n    Continent: '',\n  });\n\n  const handleSort = (column) => {\n    setSortOrder((prevSortOrder) => ({\n      Country: column === 'Country' ? (prevSortOrder.Country === 'ASC' ? 'DESC' : 'ASC') : '',\n      Population: column === 'Population' ? (prevSortOrder.Population === 'ASC' ? 'DESC' : 'ASC') : '',\n      Growth: column === 'Growth' ? (prevSortOrder.Growth === 'ASC' ? 'DESC' : 'ASC') : '',\n      Continent: column === 'Continent' ? (prevSortOrder.Continent === 'ASC' ? 'DESC' : 'ASC') : '',\n    }));\n\n    // Determine the new sortOrder for the clicked column\n    const currentOrder = sortOrder[column];\n    const newOrder = currentOrder === 'ASC' ? 'DESC' : 'ASC';\n\n    // Call the onSortChange callback to send sorting information to the parent component\n    props.onSortChange(column, newOrder);\n  };\n\n  if (!props.apiData.results) {\n    // If the API request isn't completed return \"loading...\"\"\n    return <p>Loading...</p>;\n  } else {\n\n    // Extract the data from the API response\n    let data = props.apiData.results;\n\n\n    return (\n      <table class=\"tabbel\">\n        <thead>\n          <tr>\n            <th>\n              <button onClick={() => handleSort('Country')}>\n                <div>\n                  Country\n                  {sortOrder.Country === 'ASC' && ' ▲'}\n                  {sortOrder.Country === 'DESC' && ' ▼'}\n                </div>\n              </button>\n            </th>\n            <th>\n              <button onClick={() => handleSort('Population')}>\n                <div>\n                  Population\n                  {sortOrder.Population === 'ASC' && ' ▲'}\n                  {sortOrder.Population === 'DESC' && ' ▼'}\n                </div>\n              </button>\n            </th>\n            <th>\n              <button onClick={() => handleSort('Growth')}>\n                <div>\n                  Growth\n                  {sortOrder.Growth === 'ASC' && ' ▲'}\n                  {sortOrder.Growth === 'desc' && ' ▼'}\n                </div>\n              </button>\n            </th>\n            <th>\n              <button onClick={() => handleSort('Continent')}>\n                <div>\n                  Continent\n                  {sortOrder.Continent === 'ASC' && ' ▲'}\n                  {sortOrder.Continent === 'DESC' && ' ▼'}\n                </div>\n              </button>\n             </th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index}>\n              <td>{row.Country}</td>\n              <td>{row.Population.toLocaleString()}</td>\n              <td>{row.PopulationGrowth}</td>\n              <td>{row.Continent}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Table;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}