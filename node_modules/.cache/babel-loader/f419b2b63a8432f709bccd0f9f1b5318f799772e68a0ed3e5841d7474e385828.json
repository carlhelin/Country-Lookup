{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(props) {\n  _s();\n  const [sortColumn, setSortColumn] = useState('Country');\n  const [sortOrder, setSortOrder] = useState({\n    Country: 'ASC',\n    Population: 'ASC',\n    Growth: 'ASC',\n    Continent: 'ASC'\n  });\n  const onSortChange = column => {\n    // Map column names to their sorting order keys\n    const sortOrderKeys = {\n      Country: 'Country',\n      Population: 'Population',\n      Growth: 'Growth',\n      Continent: 'Continent'\n    };\n\n    // Toggle the sorting order for the specified column\n    const newOrder = sortOrder[sortOrderKeys[column]] === 'ASC' ? 'DESC' : 'ASC';\n\n    // Create a new sorting order object and update the specified column\n    const updatedSortOrder = {\n      ...sortOrder,\n      [sortOrderKeys[column]]: newOrder\n    };\n\n    // Update the state with the new sorting order\n    setSortOrder(updatedSortOrder);\n\n    // Clear sorting order for all other columns\n    for (const col in updatedSortOrder) {\n      if (col !== column) {\n        updatedSortOrder[col] = null;\n      }\n    }\n\n    // Call the onSortChange callback to send sorting information to the parent component\n    props.handleSort(column, newOrder);\n  };\n  if (!props.apiData.results) {\n    // If the API request isn't completed return \"loading...\"\"\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  } else {\n    // Extract the data from the API response\n    let data = props.apiData.results;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"tabbel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onSortChange('Country'),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Country\", sortOrder.Country === 'ASC' && ' ▲', sortOrder.Country === 'DESC' && ' ▼']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onSortChange('Population'),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Population\", sortOrder.Population === 'ASC' && ' ▲', sortOrder.Population === 'DESC' && ' ▼']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onSortChange('PopulationGrowth'),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Population Growth\", sortOrder.Growth === 'ASC' && ' ▲', sortOrder.Growth === 'DESC' && ' ▼']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onSortChange('Continent'),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Continent\", sortOrder.Continent === 'ASC' && ' ▲', sortOrder.Continent === 'DESC' && ' ▼']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.Country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.Population.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.PopulationGrowth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.Continent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Table, \"nSwzX1yVek0VEQfh8zYKEY47Lbc=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Table","props","_s","sortColumn","setSortColumn","sortOrder","setSortOrder","Country","Population","Growth","Continent","onSortChange","column","sortOrderKeys","newOrder","updatedSortOrder","col","handleSort","apiData","results","children","fileName","_jsxFileName","lineNumber","columnNumber","data","class","onClick","map","row","index","toLocaleString","PopulationGrowth","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/Table.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Table(props) {\n\n  const [sortColumn, setSortColumn] = useState('Country');\n\n  const [sortOrder, setSortOrder] = useState({\n    Country: 'ASC',\n    Population: 'ASC',\n    Growth: 'ASC',\n    Continent: 'ASC',\n  });\n\n  const onSortChange = (column) => {\n    // Map column names to their sorting order keys\n    const sortOrderKeys = {\n      Country: 'Country',\n      Population: 'Population',\n      Growth: 'Growth',\n      Continent: 'Continent',\n    };\n  \n    // Toggle the sorting order for the specified column\n    const newOrder = sortOrder[sortOrderKeys[column]] === 'ASC' ? 'DESC' : 'ASC';\n  \n    // Create a new sorting order object and update the specified column\n    const updatedSortOrder = {\n      ...sortOrder,\n      [sortOrderKeys[column]]: newOrder,\n    };\n  \n    // Update the state with the new sorting order\n    setSortOrder(updatedSortOrder);\n\n    // Clear sorting order for all other columns\n    for (const col in updatedSortOrder) {\n      if (col !== column) {\n        updatedSortOrder[col] = null;\n      }\n    }\n  \n    // Call the onSortChange callback to send sorting information to the parent component\n    props.handleSort(column, newOrder);\n  };\n\n  if (!props.apiData.results) {\n    // If the API request isn't completed return \"loading...\"\"\n    return <p>Loading...</p>;\n  } else {\n\n    // Extract the data from the API response\n    let data = props.apiData.results;\n\n\n    return (\n      <table class=\"tabbel\">\n        <thead>\n          <tr>\n            <th>\n              <button onClick={() => onSortChange('Country')}>\n                <div>\n                  Country\n                  {sortOrder.Country === 'ASC' && ' ▲'}\n                  {sortOrder.Country === 'DESC' && ' ▼'}\n                </div>\n              </button>\n            </th>\n            <th>\n              <button onClick={() => onSortChange('Population')}>\n                <div>\n                  Population\n                  {sortOrder.Population === 'ASC' && ' ▲'}\n                  {sortOrder.Population === 'DESC' && ' ▼'}\n                </div>\n              </button>\n            </th>\n            <th>\n              <button onClick={() => onSortChange('PopulationGrowth')}>\n                <div>\n                  Population Growth\n                  {sortOrder.Growth === 'ASC' && ' ▲'}\n                  {sortOrder.Growth === 'DESC' && ' ▼'}\n                </div>\n              </button>\n            </th>\n            <th>\n              <button onClick={() => onSortChange('Continent')}>\n                <div>\n                  Continent\n                  {sortOrder.Continent === 'ASC' && ' ▲'}\n                  {sortOrder.Continent === 'DESC' && ' ▼'}\n                </div>\n              </button>\n             </th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index}>\n              <td>{row.Country}</td>\n              <td>{row.Population.toLocaleString()}</td>\n              <td>{row.PopulationGrowth}</td>\n              <td>{row.Continent}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Table;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}