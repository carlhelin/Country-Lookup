{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/Table.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(props) {\n  console.log(props.apiData);\n  if (!props.apiData.results) {\n    // If the API request isn't completed return \"loading...\"\"\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  } else {\n    // Extract the data from the API response\n    var data = props.apiData.results;\n\n    // Sort the data by continent and then by country\n    data = data.sort((a, b) => {\n      // First, sort by continent\n      const continentComparison = a.Continent.localeCompare(b.Continent);\n      if (continentComparison !== 0) {\n        return continentComparison;\n      }\n\n      // If continents are the same, sort by country\n      return a.Country.localeCompare(b.Country);\n    });\n\n    // Create the table structure using JSX\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(data[0]).map(key => {\n            if (key === 'ContinentCode' || key === 'CountryCode') {\n              return null; // Skip these columns\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(row).map(key => {\n            if (key === 'ContinentCode' || key === 'CountryCode') {\n              return null; // Skip these columns\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row[key]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 24\n            }, this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Table","props","console","log","apiData","results","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","data","sort","a","b","continentComparison","Continent","localeCompare","Country","Object","keys","map","key","row","index","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/Table.js"],"sourcesContent":["function Table(props) {\n  console.log(props.apiData);\n\n  if (!props.apiData.results) {\n    // If the API request isn't completed return \"loading...\"\"\n    return <p>Loading...</p>;\n  } else {\n\n    // Extract the data from the API response\n    var data = props.apiData.results;\n\n    // Sort the data by continent and then by country\n    data = data.sort((a, b) => {\n      // First, sort by continent\n      const continentComparison = a.Continent.localeCompare(b.Continent);\n      if (continentComparison !== 0) {\n        return continentComparison;\n      }\n\n      // If continents are the same, sort by country\n      return a.Country.localeCompare(b.Country);\n    });\n\n    // Create the table structure using JSX\n    return (\n      <table>\n        <thead>\n          <tr>\n            {Object.keys(data[0]).map((key) => {\n              if (key === 'ContinentCode' || key === 'CountryCode') {\n                return null; // Skip these columns\n              }\n              return <th key={key}>{key}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index}>\n              {Object.keys(row).map((key) => {\n                if (key === 'ContinentCode' || key === 'CountryCode') {\n                  return null; // Skip these columns\n                }\n                return <td key={key}>{row[key]}</td>;\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Table;\n"],"mappings":";;AAAA,SAASA,KAAKA,CAACC,KAAK,EAAE;EACpBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAE1B,IAAI,CAACH,KAAK,CAACG,OAAO,CAACC,OAAO,EAAE;IAC1B;IACA,oBAAOC,OAAA;MAAAC,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B,CAAC,MAAM;IAEL;IACA,IAAIC,IAAI,GAAGX,KAAK,CAACG,OAAO,CAACC,OAAO;;IAEhC;IACAO,IAAI,GAAGA,IAAI,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACzB;MACA,MAAMC,mBAAmB,GAAGF,CAAC,CAACG,SAAS,CAACC,aAAa,CAACH,CAAC,CAACE,SAAS,CAAC;MAClE,IAAID,mBAAmB,KAAK,CAAC,EAAE;QAC7B,OAAOA,mBAAmB;MAC5B;;MAEA;MACA,OAAOF,CAAC,CAACK,OAAO,CAACD,aAAa,CAACH,CAAC,CAACI,OAAO,CAAC;IAC3C,CAAC,CAAC;;IAEF;IACA,oBACEb,OAAA;MAAAC,QAAA,gBACED,OAAA;QAAAC,QAAA,eACED,OAAA;UAAAC,QAAA,EACGa,MAAM,CAACC,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC,CAACU,GAAG,CAAEC,GAAG,IAAK;YACjC,IAAIA,GAAG,KAAK,eAAe,IAAIA,GAAG,KAAK,aAAa,EAAE;cACpD,OAAO,IAAI,CAAC,CAAC;YACf;;YACA,oBAAOjB,OAAA;cAAAC,QAAA,EAAegB;YAAG,GAATA,GAAG;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UACjC,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRL,OAAA;QAAAC,QAAA,EACGK,IAAI,CAACU,GAAG,CAAC,CAACE,GAAG,EAAEC,KAAK,kBACnBnB,OAAA;UAAAC,QAAA,EACGa,MAAM,CAACC,IAAI,CAACG,GAAG,CAAC,CAACF,GAAG,CAAEC,GAAG,IAAK;YAC7B,IAAIA,GAAG,KAAK,eAAe,IAAIA,GAAG,KAAK,aAAa,EAAE;cACpD,OAAO,IAAI,CAAC,CAAC;YACf;;YACA,oBAAOjB,OAAA;cAAAC,QAAA,EAAeiB,GAAG,CAACD,GAAG;YAAC,GAAdA,GAAG;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgB,CAAC;UACtC,CAAC;QAAC,GANKc,KAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEZ;AACF;AAACe,EAAA,GAnDQ1B,KAAK;AAqDd,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}