{"ast":null,"code":"var _jsxFileName = \"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport PageNumber from \"./pageNumber.js\";\nimport PageSize from \"./pageSize.js\";\nimport ContinentSelector from \"./ContinentSelector.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [column, setColumn] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"\");\n  const [pageCount, setPageCount] = useState(10);\n  const [selectedContinents, setSelectedContinents] = useState([]);\n  const handleSearch = searchTerm => {\n    searchTerm = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    setPageNumber(1);\n    setSearchQuery(searchTerm);\n  };\n  const handlePageChange = newPage => {\n    setPageNumber(newPage);\n  };\n  const handleSizeChange = newSize => {\n    setPageNumber(1);\n    setPageSize(newSize);\n  };\n  const handleSort = (column, sortOrder) => {\n    setApiData({\n      ...apiData,\n      order: `${column}:${sortOrder}`\n    });\n    setPageNumber(1);\n    setColumn(column);\n    setSortOrder(sortOrder);\n  };\n\n  // Update the selected continents based on the ContinentSelector\n  const handleContinentChange = continents => {\n    setSelectedContinents(continents);\n    console.log(apiData);\n  };\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what size we are requesting to the API request.\n    apiQuery = apiQuery + \"&pageSize=\" + pageSize;\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n    if (column && sortOrder) {\n      apiQuery = apiQuery + `&order=${column}:${sortOrder}`;\n    }\n    console.log(\"selectedContinents\", selectedContinents);\n    if (selectedContinents && selectedContinents.length > 1) {\n      // Concatenate selected continents as a comma-separated string\n      const continentString = selectedContinents.join(',');\n      console.log(continentString);\n      apiQuery = apiQuery + `&ContinentCode=${continentString}`;\n      console.log(\"apiQuery added: \", continentString);\n    } else {\n      console.log(\"apiQuery no one: \", apiQuery);\n    }\n\n    // Filter data based on selected continents\n    const filteredData = apiData.filter(country => {\n      return selectedContinents.length === 0 || selectedContinents.includes(country.ContinentCode);\n    });\n    fetch(apiQuery).then(results => results.json()).then(data => {\n      // Then add response to state.\n      setApiData(filteredData);\n      setPageCount(data.pager.pageCount);\n      setColumn(column);\n      setSortOrder(sortOrder);\n    });\n  }, [searchQuery, pageNumber, pageSize, sortOrder, column, pageCount, selectedContinents]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      data: apiData,\n      onSearch: handleSearch,\n      pageCount: pageCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContinentSelector, {\n      onContinentChange: handleContinentChange,\n      selectedContinents: selectedContinents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      apiData: apiData,\n      handleSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageNumber, {\n      onPageChange: handlePageChange,\n      pageNumber: pageNumber,\n      pageCount: pageCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSize, {\n      onSizeChange: handleSizeChange,\n      pageNumber: pageNumber,\n      page: pageCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YbWIB/rvLR1oknJi4lDDLMxjTHw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","SearchBar","PageNumber","PageSize","ContinentSelector","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","searchQuery","setSearchQuery","pageNumber","setPageNumber","pageSize","setPageSize","column","setColumn","sortOrder","setSortOrder","pageCount","setPageCount","selectedContinents","setSelectedContinents","handleSearch","searchTerm","charAt","toUpperCase","slice","handlePageChange","newPage","handleSizeChange","newSize","handleSort","order","handleContinentChange","continents","console","log","apiQuery","length","continentString","join","filteredData","filter","country","includes","ContinentCode","fetch","then","results","json","data","pager","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onContinentChange","onPageChange","onSizeChange","page","_c","$RefreshReg$"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport PageNumber from \"./pageNumber.js\";\nimport PageSize from \"./pageSize.js\";\nimport ContinentSelector from \"./ContinentSelector.js\";\n\nfunction App() {\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\"); \n  const [pageNumber, setPageNumber] = useState(1); \n  const [pageSize, setPageSize] = useState(10); \n  const [column, setColumn] = useState(\"\"); \n  const [sortOrder, setSortOrder] = useState(\"\"); \n  const [pageCount, setPageCount] = useState(10);\n  const [selectedContinents, setSelectedContinents] = useState([]);\n\n  const handleSearch = (searchTerm) => {\n    searchTerm = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1);\n    setPageNumber(1);\n    setSearchQuery(searchTerm);\n  }\n\n  const handlePageChange = (newPage) => {\n    setPageNumber(newPage);\n  }\n\n  const handleSizeChange = (newSize) => {\n    setPageNumber(1);\n    setPageSize(newSize);\n  }\n\n  const handleSort = (column, sortOrder) => {\n    setApiData({ ...apiData, order: `${column}:${sortOrder}` });\n    setPageNumber(1);\n    setColumn(column);\n    setSortOrder(sortOrder);\n  };\n\n  // Update the selected continents based on the ContinentSelector\n  const handleContinentChange = (continents) => {\n    setSelectedContinents(continents);\n    console.log(apiData);\n  };\n\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what size we are requesting to the API request.\n    apiQuery = apiQuery + \"&pageSize=\" + pageSize;\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n\n    if (column && sortOrder) {\n      apiQuery = apiQuery + `&order=${column}:${sortOrder}`;\n    }\n\n    console.log(\"selectedContinents\", selectedContinents);\n\n    if (selectedContinents && selectedContinents.length > 1) {\n      // Concatenate selected continents as a comma-separated string\n      const continentString = selectedContinents.join(',');\n      console.log(continentString);\n      apiQuery = apiQuery + `&ContinentCode=${continentString}`;\n      console.log(\"apiQuery added: \", continentString);\n    } else {\n      console.log(\"apiQuery no one: \", apiQuery);\n    }\n\n    // Filter data based on selected continents\n    const filteredData = apiData.filter((country) => {\n      return (\n        selectedContinents.length === 0 ||\n        selectedContinents.includes(country.ContinentCode)\n      );\n    });\n    \n    fetch(apiQuery)\n      .then((results) => results.json())\n      .then((data) => {\n        // Then add response to state.\n        setApiData(filteredData);\n        setPageCount(data.pager.pageCount);\n        setColumn(column);\n        setSortOrder(sortOrder);\n        \n      });\n  }, [searchQuery, pageNumber, pageSize, sortOrder, column, pageCount, selectedContinents]);\n\n  return (\n    <div className=\"App\">\n      <h1>Country lookup</h1>\n      <SearchBar data= {apiData} onSearch={handleSearch} pageCount={pageCount} />\n      <ContinentSelector\n        onContinentChange={handleContinentChange}\n        selectedContinents={selectedContinents}\n      />\n      <Table apiData={apiData} handleSort={handleSort} />\n      <PageNumber onPageChange={handlePageChange} pageNumber={pageNumber} pageCount={pageCount} />\n      <PageSize onSizeChange={handleSizeChange} pageNumber={pageNumber} page={pageCount} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}