{"ast":null,"code":"import _slicedToArray from\"/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import\"./App.css\";import Table from\"./Table.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){/* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */var _useState=useState([]),_useState2=_slicedToArray(_useState,2),apiData=_useState2[0],setApiData=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),searchQuery=_useState4[0],setSearchQuery=_useState4[1];// Default = No search query\nvar _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),pageNumber=_useState6[0],setPageNumber=_useState6[1];//Default = Page 1\nuseEffect(function(){// All parameters are appended to this URL.\nvar apiQuery=\"https://dhis2-app-course-api.ifi.uio.no/api?\";// If searchQuery isn't empty add &search=searchQuery to the API request.\nif(searchQuery){apiQuery=apiQuery+\"&search=\"+searchQuery;}// Add what page we are requesting to the API request.\napiQuery=apiQuery+\"&page=\"+pageNumber;// Query data from API.\nconsole.log(\"Querying: \"+apiQuery);fetch(apiQuery).then(function(results){return results.json();}).then(function(data){// Then add response to state.\nsetApiData(data);});},[searchQuery,pageNumber]);// Array containing which state changes that should re-reun useEffect()\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Country lookup\"}),/*#__PURE__*/_jsx(Table,{apiData:apiData})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Table","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","apiData","setApiData","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","pageNumber","setPageNumber","apiQuery","console","log","fetch","then","results","json","data","className","children"],"sources":["/Users/carlhelin/Library/CloudStorage/OneDrive-UniversitetetiOslo/IN5320/assignment2/in5320-assignment2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./Table.js\";\n\nfunction App() {\n  /* Create state:\n        - apiData: List containing dictionaries of countries from API.\n        - searchQuery: The query parameter that should be added to &search=\n        - pageNumber: The page that is requested\n  */\n\n  const [apiData, setApiData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(); // Default = No search query\n  const [pageNumber, setPageNumber] = useState(1); //Default = Page 1\n\n  useEffect(() => {\n    // All parameters are appended to this URL.\n    let apiQuery = \"https://dhis2-app-course-api.ifi.uio.no/api?\";\n\n    // If searchQuery isn't empty add &search=searchQuery to the API request.\n    if (searchQuery) {\n      apiQuery = apiQuery + \"&search=\" + searchQuery;\n    }\n\n    // Add what page we are requesting to the API request.\n    apiQuery = apiQuery + \"&page=\" + pageNumber;\n\n    // Query data from API.\n    console.log(\"Querying: \" + apiQuery);\n    fetch(apiQuery)\n      .then((results) => results.json())\n      .then((data) => {\n        // Then add response to state.\n        setApiData(data);\n      });\n  }, [searchQuery, pageNumber]); // Array containing which state changes that should re-reun useEffect()\n\n  return (\n    <div className=\"App\">\n      <h1>Country lookup</h1>\n      <Table apiData={apiData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"6LAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACF;AACA;AACA;AACA,IAEE,IAAAC,SAAA,CAA8BR,QAAQ,CAAC,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1B,IAAAI,UAAA,CAAsCb,QAAQ,CAAC,CAAC,CAAAc,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAAgB;AAClD,IAAAG,UAAA,CAAoCjB,QAAQ,CAAC,CAAC,CAAC,CAAAkB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAxCE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAAiB;AAEjDjB,SAAS,CAAC,UAAM,CACd;AACA,GAAI,CAAAoB,QAAQ,CAAG,8CAA8C,CAE7D;AACA,GAAIN,WAAW,CAAE,CACfM,QAAQ,CAAGA,QAAQ,CAAG,UAAU,CAAGN,WAAW,CAChD,CAEA;AACAM,QAAQ,CAAGA,QAAQ,CAAG,QAAQ,CAAGF,UAAU,CAE3C;AACAG,OAAO,CAACC,GAAG,CAAC,YAAY,CAAGF,QAAQ,CAAC,CACpCG,KAAK,CAACH,QAAQ,CAAC,CACZI,IAAI,CAAC,SAACC,OAAO,QAAK,CAAAA,OAAO,CAACC,IAAI,CAAC,CAAC,GAAC,CACjCF,IAAI,CAAC,SAACG,IAAI,CAAK,CACd;AACAhB,UAAU,CAACgB,IAAI,CAAC,CAClB,CAAC,CAAC,CACN,CAAC,CAAE,CAACb,WAAW,CAAEI,UAAU,CAAC,CAAC,CAAE;AAE/B,mBACEb,KAAA,QAAKuB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB1B,IAAA,OAAA0B,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvB1B,IAAA,CAACF,KAAK,EAACS,OAAO,CAAEA,OAAQ,CAAE,CAAC,EACxB,CAAC,CAEV,CAEA,cAAe,CAAAJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}